[
  {
    "id": "project-1",
    "title": "Social Media App",
    "tech": "Kotlin, Android",
    "subTitle": "Kotlin, Android",
    "github": "https://github.com/2060k12/SocialMediaAndroidKotlin",
    "overview": "This mobile app is built with Kotlin and follows the MVVM architecture for clean and maintainable code. The UI uses XML layouts and fragments, combined with ViewBinding for easy view interactions. LiveData enables reactive updates, ensuring the interface stays in sync with data changes. Firebase powers the backend, including Firestore for real-time database, Firestorage for media, and Authentication for secure user management. The app also utilizes the device camera to enhance user functionality, providing a practical and engaging experience overall.",
    "features": [
      "Photo Sharing",
      "Realtime chat",
      "Like/ comment on posts",
      "share and view stories which gets del in 24 hrs",
      "edit profile info including profile image",
      "Search profiles",
      "Add / remove Followings and followers"
    ],
    "video": "https://www.youtube.com/embed/QS28nnpzoFY?si=Jzt0U8M7k7H7F50D",
    "screenshot": ["/images/11.png", "/images/12.png", "/images/13.png"],
    "thumnail": ["/images/11.png", "/images/12.png", "/images/13.png"]
  },
  {
    "id": "project-2",
    "title": "E-commerce",
    "tech": "Kotlin, Android",
    "subTitle": "Kotlin, Android",
    "github": "https://github.com/2060k12/Ecommerce",
    "overview": "This e-commerce mobile app, built with Kotlin, utilizes Jetpack Compose for a modern, declarative UI. It follows the MVVM architecture for a clear separation of concerns. Firebase handles the backend, including Firestore for the database, Firebase Storage for images, and Firebase Authentication for user management. A Room database is used for local data persistence, specifically for the shopping cart. The app uses the Coil library for efficient image loading and a Horizontal Pager to display product feature images, providing a smooth user experience.",
    "features": [
      "Admin and Customer Login",
      "Add/ remove products (admin)",
      "Add to deals (admin)",
      "Decrease product price (admin)",
      "Add Images from gallery (admin)",
      "Confirm / cancel / refund order (admin)",
      "Search products",
      "See deals",
      "Add to cart, Checkout",
      "Edit user details",
      "add review/ rating"
    ],
    "video": "https://www.youtube.com/embed/Y9jLqAwjwjM?si=hmP1hG4uCEEstkt9",
    "screenshot": ["/images/21.png", "/images/22.png", "/images/23.png"],
    "thumnail": ["/images/21.png", "/images/22.png", "/images/23.png"]
  },
  {
    "id": "project-3",
    "title": "Music Review Website",
    "tech": "ReactJs, JavaScript, TailwindCSS",
    "subTitle": "ReactJs, JavaScript, TailwindCSS",
    "github": "https://github.com/2060k12/beatbyte",
    "overview": "This music review website is built with ReactJs and JavaScript for the front end, using TailwindCSS for a utility-first styling approach. Firebase serves as the backend, providing Authentication, Firebase Storage, and a Firestore database for real-time data updates. The site is hosted on Netlify, ensuring reliable deployment and quick access. Its backend is designed to update in real-time, offering a dynamic and responsive user experience.",
    "features": [
      "Add and remove both albums and artists (Login required)",
      "Add reviews",
      "View Other's reviews",
      "Login feature",
      "Change user details",
      "Favourites",
      "Search both artist and albums",
      "Filter"
    ],
    "video": "https://www.youtube.com/embed/Y5Rx-M1wY-s?si=35l_1eGQKcZVjbyV",
    "screenshot": ["/images/31.png"],

    "thumnail": ["/images/31.png"]
  },
  {
    "id": "project-4",
    "title": "Music Review App",
    "tech": "Java, Android, MVVM, Room Database, LiveData, XML Layouts",
    "subTitle": "Java, Android",
    "github": "https://github.com/2060k12/BeatByte_Android_Java",
    "overview": "A music review application built using Java and Android. It follows the MVVM architecture and utilizes LiveData, Room Database, XML layouts, Fragments, ViewBinding, RecyclerView, and Picasso for image loading.",
    "features": [
      "User login and registration",
      "Add new albums and artists",
      "Change email, password, name, or profile images",
      "Add ratings and reviews",
      "Browse through all listed albums and artists",
      "Automatic scroll on Hero section every 1.5 seconds"
    ],
    "video": "https://www.youtube.com/embed/3TjtR8DqjNI?si=QPHuYnDZhqNI-7YR",
    "screenshot": ["/images/41.png", "/images/42.png", "/images/43.png"],

    "thumnail": ["/images/41.png", "/images/42.png", "/images/43.png"]
  },
  {
    "id": "project-5",
    "title": "Voice Recorder",
    "tech": "Swift, UIKit, Firebase (Auth & Storage), AVFoundation, Unsplash API",
    "subTitle": "Swift, UIKit, Firebase",
    "github": "https://github.com/2060k12/MagicRecorder",
    "overview": "An iOS voice recording application developed using Swift and UIKit. It integrates Firebase for backend services and utilizes AVFoundation for audio recording and playback.",
    "features": [
      "Record audio",
      "Play recorded audio",
      "Convert audio to video with an image",
      "Unsplash API integration for images",
      "Choose images from the gallery",
      "Upload recordings to Firebase Storage",
      "Search users by email and play their recordings"
    ],
    "video": "https://www.youtube.com/embed/Re9SOGq4iG0?si=1O8D1YShbHvya34i",
    "screenshot": ["/images/51.png", "/images/52.png", "/images/53.png"],

    "thumnail": ["/images/51.png", "/images/52.png", "/images/53.png"]
  },
  {
    "id": "project-6",
    "title": "Bill Splitting App",
    "tech": "React Native, Firebase (Auth & Firestore), Real-time Notifications",
    "subTitle": "React Native, Firebase",
    "github": "https://github.com/2060k12/BillShareCrossPlatformApp",
    "overview": "A cross-platform bill splitting application developed using React Native and Firebase. It allows users to share bills with contacts and manage expenses efficiently.",
    "features": [
      "Secure login with Firebase Authentication",
      "Add and remove users from expenses",
      "Settle bills",
      "In-app notifications",
      "Profile management",
      "View expense details",
      "Remove users from any expenses",
      "Update expenses"
    ],
    "video": "https://www.youtube.com/embed/VRgtWyjoqdI?si=qHO989Imei3IYOpF",
    "screenshot": ["/images/61.png", "/images/62.png", "/images/63.png"],

    "thumnail": ["/images/61.png", "/images/62.png", "/images/63.png"]
  },
  {
    "id": "project-7",
    "title": "Workplace Management FullStack",
    "tech": "React Native, NodeJS, ExpressJS, AWS, Real-time Chat",
    "subTitle": "React Native, Express",
    "github": "https://github.com/2060k12/workplace-management-app  https://github.com/euronymousutsv/WorkplaceBackend",
    "overview": "A full-stack workplace management application developed using React Native for mobile platforms and ExpressJS with NodeJS for the backend. It includes features like real-time communication, role-based access, and geofencing.",
    "features": [
      "User authentication with role-based access",
      "Multi-server structure for different offices",
      "Channel-based communication",
      "Clock in/out functionality",
      "Leave requests management",
      "Document upload and validation",
      "Real-time chat",
      "Roster and schedule view",
      "Income overview",
      "Push and in-app notifications",
      "Custom chat themes"
    ],
    "video": "https://www.youtube.com/embed/your_video_id",
    "screenshot": ["/images/71.png", "/images/72.png", "/images/73.png"],
    "thumnail": ["/images/71.png", "/images/72.png", "/images/73.png"]
  },
  {
    "id": "project-8",
    "title": "Bakery Website",
    "tech": "Next.js, TypeScript, PostgreSQL, Amazon S3, DigitalOcean, CMS Integration",
    "subTitle": "Next.js, TypeScript, PostgreSQL",
    "github": "https://github.com/2060k12/BakeryWebapp",
    "overview": "A bakery website developed using Next.js and TypeScript. It features a CMS for managing promotions and orders, integration with TikTok for video content, and a custom cake ordering system.",
    "features": [
      "CMS features for managing promotions",
      "Create and manage orders",
      "Upload content",
      "Explore page for browsing",
      "View TikTok videos by the bakery",
      "Checkout functionality",
      "Custom cake orders",
      "Add to cart"
    ],
    "video": "https://www.youtube.com/embed/L0fKLDUR4IM?si=1P7CqbPaXY3xBPAz",
    "screenshot": ["/images/81.png"],
    "thumnail": ["/images/81.png"]
  }
]
